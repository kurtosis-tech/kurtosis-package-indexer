version: 2.1


orbs:
  npm-publisher: uraway/npm-publisher@0.2.0
  aws-cli: circleci/aws-cli@4.0
  aws-ecs: circleci/aws-ecs@4.0

parameters:
  go-version:
    type: string
    default: "1.19"
  docker-engine-version:
    type: string
    default: "20.10.7"
  ui-node-version:
    type: string
    default: 18.19.0

executors:
  ubuntu_vm:
    machine:
      image: ubuntu-2004:202201-02

# NOTE: Because CircleCI jobs run on separate machines from each other, we duplicate steps (like checkout) between jobs. This is because doing the "correct" DRY
#  refactoring of, "one job for checkout, one job for build Docker image, etc." would require a) persisting files between jobs and b) persisting Docker images between
#  jobs. Both are annoying (saving/loading workspaces require re-downloading the workspace over the network, and there doesn't seem to be a good way to do Docker
#  images), so we run everything inside a single job.
# See also: https://discuss.circleci.com/t/can-docker-images-be-preserved-between-jobs-in-a-workflow-without-a-manual-load-save/23388/12
jobs:
  build_api_golang:
    docker:
      - image: "cimg/go:<< pipeline.parameters.go-version>>"
    working_directory: /home/circleci/workspace
    steps:
      - checkout

      - run: |
          api/golang/scripts/build.sh

  build_server:
    docker:
      - image: "cimg/go:<< pipeline.parameters.go-version>>"
    working_directory: /home/circleci/workspace
    steps:
      - checkout

      - run: |
          server/scripts/build.sh

      - persist_to_workspace:
          root: /home/circleci/workspace
          paths:
            - server/build/kurtosis-package-indexer

  run_kurtosis_package:
    executor: ubuntu_vm
    working_directory: /home/circleci/workspace
    steps:
      - checkout

      - attach_workspace:
          at: ./

      - run: |
          echo "deb [trusted=yes] https://apt.fury.io/kurtosis-tech/ /" | sudo tee /etc/apt/sources.list.d/kurtosis.list
          sudo apt update
          sudo apt install kurtosis-cli

      - run: |
          set -euo pipefail
          source server/scripts/_constants.env
          docker build -t "${IMAGE_ORG_AND_REPO}:dev" -f server/Dockerfile server/

      # Checking the CircleCi built-in CI env vars
      - run: |
          echo "CI env var value: ${CI}"
          echo "CIRCLECI env var value: ${CIRCLECI}"

      - run: |
          set -euo pipefail
          kurtosis run ./kurtosis/main.star --enclave ci-check "{\"kurtosis_package_indexer_version\": \"dev\", \"github_user_token\": \"${KURTOSISBOT_GITHUB_TOKEN}\", \"is_running_in_ci\": \"${CI}\"}"

  publish_kurtosis_typescript_libs:
    docker:
      - image: "cimg/node:<< pipeline.parameters.ui-node-version>>"
    steps:
      - checkout
      - run: api/typescript/scripts/build.sh
      - npm-publisher/publish-from-package-version:
          package-path: api/typescript
          publish-token-variable: NPMJS_AUTH_TOKEN

  publish_server_image:
    docker:
      - image: "cimg/go:<< pipeline.parameters.go-version >>"
    working_directory: /home/circleci/workspace
    steps:
      - checkout

      - setup_remote_docker:
          version: "<< pipeline.parameters.docker-engine-version>>"
      - run: echo "${DOCKER_PASSWORD}" | docker login -u ${DOCKER_USERNAME} --password-stdin

      - run: |
          server/scripts/build.sh

      - run: |
          set -euo pipefail
          source server/scripts/_constants.env
          dockerfile_filepath='server/Dockerfile'
          version_build="$(./server/scripts/get-docker-tag.sh)"
          version_to_publish="${CIRCLE_TAG}" # this job is run only on tags
          echo "Version that was built: ${version_build}"
          echo "Version that will be published: ${version_to_publish}"
          image_name_with_version="${IMAGE_ORG_AND_REPO}:${version_build}"
          image_name_to_publish_semver="${IMAGE_ORG_AND_REPO}:${version_to_publish}"
          image_name_to_publish_latest="${IMAGE_ORG_AND_REPO}:latest"
          push_to_dockerhub=true 
          server/scripts/docker-image-builder.sh "${push_to_dockerhub}" "${dockerfile_filepath}" "${image_name_with_version}" "${image_name_to_publish_semver}" "${image_name_to_publish_latest}"

  deploy_kurtosis_package_indexer_service:
    executor: ubuntu_vm
    steps:
      - checkout

      - aws-cli/setup:
          aws_access_key_id: AWS_ACCESS_KEY_ID
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY

      - aws-ecs/update_service:
          cluster: kurtosis-cloud
          family: kurtosis-package-indexer
          service_name: kurtosis-package-indexer
          force_new_deployment: true
          skip_task_definition_registration: true

workflows:
  build:
    jobs:
      - build_api_golang:
          context:
            - github-user
          filters:
            branches:
              ignore:
                - develop
                - main
      - build_server:
          context:
            - github-user
          filters:
            branches:
              ignore:
                - develop
                - main
      - run_kurtosis_package:
          context:
            - github-user
            - kurtosis-backend-snowflake-service-account
          requires:
            - build_api_golang
            - build_server
          filters:
            branches:
              ignore:
                - develop
                - main
      - publish_server_image:
          context:
            - docker-user
            - github-user
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+$/
      - publish_kurtosis_typescript_libs:
          context:
            - npmjs-user
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+$/
      - deploy_kurtosis_package_indexer_service:
          context:
            - aws-terraform-user
          requires:
            - publish_server_image
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+$/
